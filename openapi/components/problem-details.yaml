# RFC 9457 Problem Details Components
# https://datatracker.ietf.org/doc/html/rfc9457

components:
  schemas:
    ProblemDetails:
      type: object
      description: A problem detail object per RFC 9457
      required:
        - type
        - title
        - status
      properties:
        type:
          type: string
          format: uri
          description: A URI reference that identifies the problem type
          default: about:blank
          example: https://example.com/probs/out-of-credit
        title:
          type: string
          description: A short, human-readable summary of the problem type
          example: You do not have enough credit.
        status:
          type: integer
          format: int32
          description: The HTTP status code generated by the origin server
          minimum: 100
          maximum: 599
          example: 403
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem
          example: Your current balance is 30, but that costs 50.
        instance:
          type: string
          format: uri
          description: A URI reference that identifies the specific occurrence of the problem
          example: https://api.example.com/account/12345/msgs/abc
          
    # Extended problem details for validation errors
    ValidationProblemDetails:
      allOf:
        - $ref: '#/components/schemas/ProblemDetails'
        - type: object
          properties:
            errors:
              type: array
              description: An array of validation error details
              items:
                $ref: '#/components/schemas/ValidationError'
                
    ValidationError:
      type: object
      required:
        - detail
      properties:
        detail:
          type: string
          description: A human-readable explanation of the validation error
          example: must be a positive integer
        pointer:
          type: string
          description: A JSON Pointer to the location of the error in the request
          example: "#/age"
        value:
          description: The invalid value that caused the error
          example: -5
          
    # Problem types specific to our Cars API
    OutOfCreditProblem:
      allOf:
        - $ref: '#/components/schemas/ProblemDetails'
        - type: object
          properties:
            balance:
              type: number
              format: double
              description: Current account balance
              example: 30.00
            accounts:
              type: array
              description: Links to accounts where credit can be added
              items:
                type: string
                format: uri
              example: ["https://api.example.com/account/12345", "https://api.example.com/account/67890"]
              
    RateLimitProblem:
      allOf:
        - $ref: '#/components/schemas/ProblemDetails'
        - type: object
          properties:
            retryAfter:
              type: integer
              description: Number of seconds until the rate limit resets
              example: 60
            limit:
              type: integer
              description: The rate limit for this resource
              example: 100
            remaining:
              type: integer
              description: Number of requests remaining in the current window
              example: 0
              
    CarNotFoundProblem:
      allOf:
        - $ref: '#/components/schemas/ProblemDetails'
        - type: object
          properties:
            carId:
              type: string
              description: The car ID that was not found
              example: "999"
            suggestion:
              type: string
              description: Helpful suggestion for resolving the issue
              example: Please verify the car ID and try again. You can use the /cars endpoint to list available cars.

  responses:
    BadRequest:
      description: Bad Request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ValidationProblemDetails'
          example:
            type: https://example.com/probs/validation-error
            title: Your request is not valid.
            status: 400
            errors:
              - detail: must be a positive integer
                pointer: "#/quantity"
                
    Unauthorized:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          example:
            type: https://example.com/probs/unauthorized
            title: Authentication failed
            status: 401
            detail: The provided credentials are invalid or missing.
            
    Forbidden:
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/OutOfCreditProblem'
          example:
            type: https://example.com/probs/out-of-credit
            title: You do not have enough credit.
            status: 403
            detail: Your current balance is 30, but that costs 50.
            instance: https://api.example.com/account/12345/msgs/abc
            balance: 30
            accounts: ["https://api.example.com/account/12345", "https://api.example.com/account/67890"]
            
    NotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/CarNotFoundProblem'
          example:
            type: https://example.com/probs/car-not-found
            title: Car not found
            status: 404
            detail: The requested car does not exist in our database.
            carId: "999"
            suggestion: Please verify the car ID and try again.
            
    TooManyRequests:
      description: Too Many Requests
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/RateLimitProblem'
          example:
            type: https://example.com/probs/rate-limit-exceeded
            title: Rate limit exceeded
            status: 429
            detail: You have exceeded the rate limit for this resource.
            retryAfter: 60
            limit: 100
            remaining: 0
            
    InternalServerError:
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
          example:
            type: https://example.com/probs/internal-error
            title: Internal server error
            status: 500
            detail: An unexpected error occurred while processing your request.
            instance: https://api.example.com/errors/5678
